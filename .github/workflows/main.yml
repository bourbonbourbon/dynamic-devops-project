name: CI
on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Analysing the code with pylint
        run: |
          pylint --fail-under=9 *.py services tests

      - name: Linting Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
          with:
            dockerfile: Dockerfile

  build:
    steps:
      - name: Extract version number
        run: |
          ver=$(grep -oP '"[\S]*"' version.py | cut -d'"' -f2)
          echo "Version=$ver" >> "$GITHUB_ENV"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/ddp:${{ env.Version }}

  unittests:
    steps:
      - name: Install pytest
        run: |
          pip install pylint

      - name: Run pytest
        run: |
          pytest
